osson

1. 
N ta elementdan iborat 1 o‘lchamli list berilgan. 3 xonali elementlarini miqdorini toping.

using System.Diagnostics.Tracing;

namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        var result = CountThreeDigitNumbers(numbers);
        Console.WriteLine($"Result: {result}");
    }
    public static int CountThreeDigitNumbers(List<int> numbers)
    {
        var result = 0;
        foreach (var number in numbers)
        {
            if (number > 99 && number < 1000)
            {
                result++;
            }
        }

        return result;
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
}


2. 
N ta elementdan iborat 1 o‘lchamli list berilgan. Juft elementlarini miqdorini toping.
using System.Diagnostics.Tracing;

namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        var result = EvenElements(numbers);
        Console.WriteLine($"Result: {result}");
    }
    public static int EvenElements(List<int> numbers)
    {
        var result = 0;
        foreach (var number in numbers)
        {
            if (number % 2 == 0)
            {
                result++;
            }
        }

        return result;
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
}


3. 
N ta elementdan iborat 1 o‘lchamli list berilgan. Toq elementlarini yig‘indisini toping.

using System.Diagnostics.Tracing;

namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        var result = OddElements(numbers);
        Console.WriteLine($"Result: {result}");
    }
    public static int OddElements(List<int> numbers)
    {
        var result = 0;
        foreach (var number in numbers)
        {
            if (number % 2 != 0)
            {
                result++;
            }
        }

        return result;
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
}


4. 
N ta elementdan iborat 1 o‘lchamli list berilgan. 3 ga va 7 ga karrali elementlarini miqdorini toping.
using System.Diagnostics.Tracing;

namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        var result = MultiplesOfThreeAndSeven(numbers);
        Console.WriteLine($"Result: {result}");
    }
    public static int MultiplesOfThreeAndSeven(List<int> numbers)
    {
        var result = 0;
        foreach (var number in numbers)
        {
            if (number % 3 == 0 && number % 7 == 0)
            {
                result++;
            }
        }

        return result;
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
}


5. 
N ta elementdan iborat 1 o‘lchamli list berilgan. 2 xonali toq elementlarini miqdorini va yig‘indisini toping.
using System.Diagnostics.Tracing;

namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        int count;
        int sum;
        CountAndSumTwoDigitOddNumbers(numbers, out count, out sum);
        Console.WriteLine($"Count: {count} : Sum: {sum}");
    }
    public static void CountAndSumTwoDigitOddNumbers(List<int> numbers, out int count, out int sum)
    {
        count = 0;
        sum = 0;
        foreach (var number in numbers)
        {
            if (number % 2 != 0 && number > 9 && number < 100)
            {
                count++;
                sum += number;
            }
        }
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
}


6. 
N ta elementdan iborat 1 o‘lchamli list berilgan. 1 chi va oxirgi elementlarini almashtiring va ekranga listni chiqaring.

using System.Diagnostics.Tracing;

namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        SwapFirstAndLastElement(numbers);
        DisplayList(numbers);
    }
    public static void SwapFirstAndLastElement(List<int> numbers)
    {
        var item = numbers[0];
        numbers[0] = numbers[numbers.Count - 1];
        numbers[numbers.Count - 1] = item;
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}

7. 
N ta elementdan iborat 1 o‘lchamli list berilgan. Dastlabki 3 ta elementini yig‘indisini toping.
using System.Diagnostics.Tracing;

namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        var result = SumFirstThreeElements(numbers);
        Console.WriteLine(result);
    }
    public static int SumFirstThreeElements(List<int> numbers)
    {
        var result = 0;
        for (var i = 0; i < 3; i++)
        {
            result += numbers[i];
        }

        return result;
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}


8. 
N ta elementdan iborat 1 o‘lchamli list berilgan. Oxirgi 3 ta elementini yig‘indisi toping.
using System.Diagnostics.Tracing;

namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        var result = SumLastThreeElements(numbers);
        Console.WriteLine(result);
    }
    public static int SumLastThreeElements(List<int> numbers)
    {
        var result = 0;
        for (var i = 0; i < 3; i++)
        {
            result += numbers[numbers.Count - i - 1];
        }

        return result;
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}


9. 
N ta elementdan iborat 1 o‘lchamli list berilgan. Toq elementlar bn Juft elementlarini taqqoslang.
Agar toqlari ko‘p bo‘lsa true aks holda false chiqaring.

using System.Diagnostics.Tracing;

namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        var result = CompareOddAndEvenElements(numbers);
        Console.WriteLine(result);
    }
    public static bool CompareOddAndEvenElements(List<int> numbers)
    {
        var odd = 0;
        var even = 0;
        foreach(var number in numbers)
        {
            if (number % 2 == 0)
            {
                even++;
            }
            else
            {
                odd++;
            }
        }

        return odd > even;
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}


10. 
N ta elementdan iborat 1 o‘lchamli list berilgan. Juft elementlarini 3 barobarga oshiring.
using System.Diagnostics.Tracing;

namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        TripleEvenElements(numbers);
        DisplayList(numbers);        
    }
    public static void TripleEvenElements(List<int> numbers)
    {
        for (var i = 0; i < numbers.Count; i++)
        {
            if (numbers[i] % 2 == 0)
            {
                numbers[i] *= 3;
            }
        }
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}


11. 
N ta elementdan iborat 1 o‘lchamli list berilgan. Agar hamma elementi 5 ga karrali bo‘lsa true aks holda false chiqaring.
using System.Diagnostics.Tracing;

namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        var result  = AllElementsAreMultiplesOfFive(numbers);
        Console.WriteLine(result);
    }
    public static bool AllElementsAreMultiplesOfFive(List<int> numbers)
    {
        var result = true;
        for (var i = 0; i < numbers.Count; i++)
        {
            if (numbers[i] % 5 != 0)
            {
                result = false;
                break;
            }
        }

        return result;
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}


12. 
N ta elementdan iborat 1 o‘lchamli list berilgan. Agar dastlabki 3 ta elementi 2 xonali bo‘lsa true aks holda false chiqaring.

using System.Diagnostics.Tracing;

namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        var result  = FirstThreeElementsAreTwoDigit(numbers);
        Console.WriteLine(result);
    }
    public static bool FirstThreeElementsAreTwoDigit(List<int> numbers)
    {
        var result = true;
        for (var i = 0; i < 3; i++)
        {
            if ((numbers[i] > 9 && numbers[i] < 100) is false)
            {
                result = false;
                break;
            }
        }

        return result;
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}


13. 
N ta elementdan iborat 1 o‘lchamli list berilgan. Agar dastlabki 2 ta elementni juft va oxirgi 2 ta elementi toq bo‘lsa true aks holda false chiqaring
using System.Diagnostics.Tracing;

namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        var result  = FirstTwoEvenAndLastTwoOdd(numbers);
        Console.WriteLine(result);
    }
    public static bool FirstTwoEvenAndLastTwoOdd(List<int> numbers)
    {
        var result = true;
        for (var  i = 0; i < 2; i++)
        {
            if (numbers[i] % 2 != 0 || numbers[numbers.Count - 1 - i] % 2 == 0)
            {
                result = false;
                break;
            }
        }

        return result;
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}

14. 
N ta elementdan iborat 1 o‘lchamli list berilgan. Eng kichik elementini aniqlang.
using System.Diagnostics.Tracing;

namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        var result  = FindSmallestElement(numbers);
        Console.WriteLine(result);
    }
    public static int FindSmallestElement(List<int> numbers)
    {
        var result = int.MaxValue;
        foreach (var number in numbers)
        {
            if (number < result)
            {
                result = number;
            }
        }

        return result;
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}


15. 
N ta elementdan iborat 1 o‘lchamli list berilgan. Eng katta va eng kichik elementini yig‘indisini aniqlang.

using System.Diagnostics.Tracing;

namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        var result  = SumOfLargestAndSmallestElement(numbers);
        Console.WriteLine(result);
    }
    public static int SumOfLargestAndSmallestElement(List<int> numbers)
    {
        var minNumber = int.MaxValue;
        var maxNumber = int.MinValue;
        foreach (var number in numbers)
        {
            if (number < minNumber)
            {
                minNumber = number;
            }
            else if (number > maxNumber)
            {
                maxNumber = number;
            }
        }

        return maxNumber + minNumber;
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}


16. 
N ta elementdan iborat 1 o‘lchamli list berilgan. Barcha 2 xonali elementlarni qiymatini 100 ga oshiring.
using System.Diagnostics.Tracing;

namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        IncreaseTwoDigitElementsByHundred(numbers);
        DisplayList(numbers);
    }
    public static void IncreaseTwoDigitElementsByHundred(List<int> numbers)
    {
        for (var i = 0; i < numbers.Count; i++)
        {
            if (numbers[i] % 2 == 0)
            {
                numbers[i] += 100;
            }
        }
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}


17. 
N ta elementdan iborat 1 o‘lchamli list berilgan. Musbat va Manfiy elementlarini miqdorini aniqlang.
using System.Diagnostics.Tracing;

namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        var negativeNumbers = 0;
        var postiveNumbers = 0;
        CountPositiveAndNegativeElements(numbers, ref negativeNumbers, ref postiveNumbers);
        Console.WriteLine($"{negativeNumbers} : {postiveNumbers}");
    }
    public static void CountPositiveAndNegativeElements(List<int> numbers, ref int negativeCount, ref int positiveCount)
    {
        for (var i = 0; i < numbers.Count; i++)
        {
            if (numbers[i] > -1)
            {
                positiveCount++;
            }
            else
            {
                negativeCount++;
            }
        }
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}


18. 
N ta elementdan iborat 1 o‘lchamli list berilgan. 1 chi elementidan kichik bo‘lgan elementlarni miqdorini aniqlang.

19. 
N ta elementdan iborat 1 o‘lchamli list berilgan. Oxirgi elementida katta bo‘lgan elementlarni yig‘indisini aniqlang.

20. 
N ta elementdan iborat 1 o‘lchamli list berilgan. Agar barcha elementni 4 ga yoki 3 ga karrali bo‘lsa "hello" aks holda "salom" ni chiqaring.
namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        var result = "Hello";
        CheckMultiplesOftreeOrfour(numbers, ref result);
        Console.WriteLine(result);
    }
    public static void CheckMultiplesOftreeOrfour(List<int> numbers, ref string result)
    {
        
        for (var i = 0; i < numbers.Count - 1; i++)
        {
            if (numbers[i] % 3 != 0 && numbers[i] % 4 != 0)
            {
                result = "salom";
                break;
            }
        }
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}


qiyin

21. 
N ta elementdan iborat 1 o‘lchamli list berilgan. Agar elementlari o‘suvchi bo‘lsa true aks holda false chiqaring.
namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        var result = true;
        IsIncreasing(numbers, ref result);
        Console.WriteLine(result);
    }
    public static void IsIncreasing(List<int> numbers, ref bool result)
    {
        
        for (var i = 0; i < numbers.Count - 1; i++)
        {
            if (numbers[i] > numbers[i+1])
            {
                result = false;
                break;
            }
        }
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}


22. 
N ta elementdan iborat 1 o‘lchamli list berilgan. Agar elementlari kamayuvchi bo‘lsa true aks holda false chiqaring.
namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        var result = true;
        IsDecreasing(numbers, ref result);
        Console.WriteLine(result);
    }
    public static void IsDecreasing(List<int> numbers, ref bool result)
    {
        
        for (var i = 0; i < numbers.Count - 1; i++)
        {
            if (numbers[i] < numbers[i+1])
            {
                result = false;
                break;
            }
        }
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}


23. 
N ta elementdan iborat 1 o‘lchamli list berilgan. Eng katta elementi bilan eng kichik elementini joyini almashtiring. Va listni chiqaring.
namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        var result = 0;
        SwapMaxMinElements(numbers);
        DisplayList(numbers);
    }
    public static void SwapMaxMinElements(List<int> numbers)
    {
        var maxElement = int.MinValue;
        var maxElementIndex = 0;
        var minElement = int.MaxValue;
        var minElementIndex = 0;
        for (var i = 0; i < numbers.Count; i++)
        {
            if (numbers[i] > maxElement)
            {
                maxElement = numbers[i];
                maxElementIndex = i;
            }
            if (numbers[i] < minElement)
            {
                minElement = numbers[i];
                minElementIndex = i;
            }
        }
        numbers[minElementIndex] = maxElement;
        numbers[maxElementIndex] = minElement;
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}


24. 
N ta elementdan iborat 1 o‘lchamli list berilgan. Elementlar yig‘indisini aniqlang
namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        var result = 0;
        SumOfElements(numbers, ref result);
        Console.WriteLine(result);
    }
    public static void SumOfElements(List<int> numbers, ref int result)
    {
        for (var i = 0; i < numbers.Count; i++)
        {
            result += numbers[i];
        }
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}



25. n ta elementdan tashkil topgan massiv berilgan. 
Massiv elementlari orasidan yig'indisi eng katta bo'ladigan 2 ta qo'shni 
elementni chiqaruvchi  programma tuzilsin.
namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        var result = 0;
        CountGreaterThanLeftNeighbor(numbers, ref result);
        Console.WriteLine(result);
    }
    public static void CountGreaterThanLeftNeighbor(List<int> numbers, ref int result)
    {
        result = numbers[0] + numbers[1];
        for (var i = 1; i < numbers.Count - 1; i++)
        {
            if (result < numbers[i] + numbers[i+1])
            {
                result = numbers[i] + numbers[i + 1];
            }
        }
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}


26. n ta elementdan tashkil topgan massiv berilgan. 
Massiv elementlari orasidan chap qo'shnisidan katta bo'lganlar sonini chiqaruvchi programma tuzilsin.

namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        var result = 0;
        CountElementsGreaterThanLeftNeighbor(numbers, ref result);
        Console.WriteLine(result);
    }
    public static void CountElementsGreaterThanLeftNeighbor(List<int> numbers, ref int result)
    {
        for (var i = 1; i < numbers.Count; i++)
        {
            if (numbers[i] > numbers[i-1])
            {
                result++;
            }
        }
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}


27. n ta elementdan tashkil topgan 2 ta massiv berilgan. listni mos elementlar ko'paytmasidan tashkil topgan yangi list hosil qiling va ekranga chiqaring.
namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var firstNumbers = FillAndGetList(length);
        var secondNumbers = FillAndGetList(length);
        var result = new List<int>();
        CreateProductList(firstNumbers, secondNumbers, result);
        DisplayList(result);
    }
    public static void CreateProductList(List<int> firstNumbers, List<int> secondNumbers, List<int> result)
    {
        for (var i = 0; i < firstNumbers.Count; i++)
        {
            result.Add(firstNumbers[i] * secondNumbers[i]);
        }
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}


28. n ta elementdan tashkil topgan string massiv berilgan.'$' bilan boshlanadigan elementlar miqdorini aniqlang.
namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var words = FillAndGetList(length);
        var counter = 0;
        CountElementsStartingWithDollar(words, ref counter);
        Console.WriteLine(counter);
    }
    public static void CountElementsStartingWithDollar(List<string> words, ref int counter)
    {
        foreach (var word in words)
        {
            if (StartingWithDollar(word) is true)
            {
                counter++;
            }
        }
    }

    public static bool StartingWithDollar(string word)
    {
        if (word[0] != '$')
        {
            return false;
        }
        return true;
    }
    public static List<string> FillAndGetList(int length)
    {
        var digits = new List<string>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var word = Console.ReadLine();
            digits.Add(word);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}


juda qiyin

29. n ta elementdan tashkil topgan string massiv berilgan. Hamma belgisi katta harf bo'lgan elementlarini ekranga chiqaruvchi dastur tuzing. 
namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var words = FillAndGetList(length);
        PrintUppercaseElements(words);
        
        
    }
    public static void PrintUppercaseElements(List<string> words)
    {
        foreach (var word in words)
        {
            if (IsAllUpper(word) is true)
            {
                Console.WriteLine(word + " ");
            }
        }
    }

    public static bool IsAllUpper(string word)
    {
        var result = true;
        foreach (var characters in word)
        {
            if (char.IsLower(characters))
            {
                result = false;
                break;
            }
        }
        return result;
    }
    public static List<string> FillAndGetList(int length)
    {
        var digits = new List<string>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var word = Console.ReadLine();
            digits.Add(word);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}


30.n ta butun sonlardan iborat massiv berilgan. 
Massivdagi har bir juft sonni birinchi uchragan juft songa orttiruvchi programma tuzilsin.
using System.Diagnostics.Tracing;

namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        AddFirstEvenToEvenElements(numbers);
        DisplayList(numbers);
        
    }
    public static void AddFirstEvenToEvenElements(List<int> numbers)
    {
        var result = 0;
        var indexFirstEven = -1;
        foreach (var number in numbers)
        {
            if (number % 2 == 0)
            {
                result = number;
                indexFirstEven++;
                break;
            }
        }
        for (var i = indexFirstEven + 1; i < numbers.Count; i++)
        {
            if (numbers[i] % 2 == 0)
            {
                numbers[i] += result;
            }
        }
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}


31.n ta butun sonlardan iborat massiv berilgan. 
Massivdagi har bir toq sonni oxirgi toq songa orttiruvchi programma tuzilsin.
using System.Diagnostics.Tracing;

namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        FindSmallestEvenIndexedElement(numbers);
        DisplayList(numbers);
        
    }
    public static void FindSmallestEvenIndexedElement(List<int> numbers)
    {
        var result = 0;
        var indexLastOdd = 0;
        foreach (var number in numbers)
        {
            if (number % 2 != 0)
            {
                result = number;
                indexLastOdd++;
            }
        }
        for (var i = 0; i < indexLastOdd; i++)
        {
            if (numbers[i] % 2 != 0)
            {
                numbers[i] += result;
            }
        }
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}


32.n ta elementdan tashkil topgan massiv berilgan. 
Massivning juft indeksli elementlari orasidan kichigini aniqlovchi programma tuzilsin. min(a0, a2, a4, ...)
using System.Diagnostics.Tracing;

namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        var result = FindSmallestEvenIndexedElement(numbers);
        Console.WriteLine(result);
        
    }
    public static int FindSmallestEvenIndexedElement(List<int> numbers)
    {
        var result = numbers[0];
        for (var i = 2; i < numbers.Count; i++)
        {
            if (i % 2 == 0)
            {
                if (numbers[i] < result)
                {
                    result = numbers[i];
                }
            }
        }

        return result;
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}


33.n ta elementdan tashkil topgan a va b massiv berilgan. c massivni hosil qiling. c[i] = max(a[i], b[i]),
 ya'ni c massivning i-elementi a va b massivlarning i-elementlaridan kattasini qabul qilsin.
using System.Diagnostics.Tracing;

namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var firstList = FillAndGetList(length);
        var secondList = FillAndGetList(length);
        var result = CreateMaxElementsArray(firstList, secondList);
        DisplayList(result);
        
    }
    public static List<int> CreateMaxElementsArray(List<int> firstList, List<int> secondList)
    {
        var result = new List<int>();
        for (var i = 0; i < firstList.Count; i++)
        {
            result.Add(Math.Max(firstList[i], secondList[i]));
        }

        return result;
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}


34.n ta elementdan iborat butun sonlardan tashkil topgan a massiv berilgan.
 a massivning juft elementlaridan tashkil topgan b massivini hosil qiling. 
b massiv elementlari soni va elementlari chiqarilsin.
using System.Diagnostics.Tracing;

namespace g10;

internal class Program
{
    static void Main(string[] texts)
    {
        Console.Write("Enter length : ");
        var length = int.Parse(Console.ReadLine());
        var numbers = FillAndGetList(length);
        var result = CreateAndPrintEvenElementsArray(numbers);
        DisplayList(result);
        Console.WriteLine($"Count: {result.Count}");
    }
    public static List<int> CreateAndPrintEvenElementsArray(List<int> numbers)
    {
        var result = new List<int>();
        for (var i = 0; i < numbers.Count; i++)
        {
            if (numbers[i] % 2 == 0)
            {
                result.Add(numbers[i]);
            }
        }

        return result;
    }
    public static List<int> FillAndGetList(int length)
    {
        var digits = new List<int>();
        for (int i = 0; i < length; i++)
        {
            Console.Write($"{i} : ");
            var number = int.Parse(Console.ReadLine());
            digits.Add(number);
        }

        return digits;
    }
    public static void DisplayList(List<int> digits)
    {
        foreach (var digit in digits)
        {
            Console.Write($"{digit} ");
        }
        Console.WriteLine();
    }
}




